// Generated by CoffeeScript 1.6.3
(function() {
  (function(root, factory) {
    var Iterator, List;
    if (typeof define === 'function' && define.amd) {
      define(['./list', './iterator'], factory);
    } else if (typeof exports === 'object') {
      List = require('./list');
      Iterator = require('./iterator');
      module.exports = factory(List, Iterator);
    } else {
      if (root.Mimosas == null) {
        root.Mimosas = {};
      }
      List = root.Mimosas.List;
      Iterator = root.Mimosas.Iterator;
      root.Mimosas.ControllerStrategy = factory(List, Iterator);
    }
  })(this, function(List, Iterator) {
    var ControllerStrategy;
    ControllerStrategy = (function() {
      function ControllerStrategy() {
        this.events = new List();
      }

      ControllerStrategy.prototype.init = function() {};

      ControllerStrategy.prototype.addEvent = function(eventName, selector, method) {
        var item, __POINTER__;
        __POINTER__ = [].slice.call(arguments, 0).join('#');
        item = {
          __POINTER__: __POINTER__,
          selector: selector,
          eventName: eventName,
          method: method
        };
        return this.events.append(item);
      };

      ControllerStrategy.prototype.removeEvent = function(eventName, selector, method) {
        var __POINTER__;
        __POINTER__ = [].slice.call(arguments, 0).join('#');
        return this.events.remove(__POINTER__);
      };

      ControllerStrategy.prototype.getEventIterator = function() {
        return new Iterator(this.events);
      };

      ControllerStrategy.prototype.setModel = function(model) {
        this.model = model;
      };

      ControllerStrategy.prototype.getModel = function() {
        return this.model;
      };

      return ControllerStrategy;

    })();
    return ControllerStrategy;
  });

}).call(this);

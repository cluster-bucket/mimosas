// Generated by CoffeeScript 1.6.3
(function() {
  (function(root, factory) {
    var Iterator, List;
    if (typeof define === 'function' && define.amd) {
      return define(['./list', './iterator'], factory);
    } else if (typeof exports === 'object') {
      List = require('./list');
      Iterator = require('./iterator');
      return module.exports = factory(List, Iterator);
    } else {
      if (root.Mimosas == null) {
        root.Mimosas = {};
      }
      List = root.Mimosas.List;
      Iterator = root.Mimosas.Iterator;
      return root.Mimosas.Subject = factory(List, Iterator);
    }
  })(this, function(List, Iterator) {
    var Subject;
    return Subject = (function() {
      function Subject() {
        this.observers = new List();
      }

      Subject.prototype.attach = function(obj) {
        return this.observers.append(obj);
      };

      Subject.prototype.detach = function(observer) {
        return this.observers.remove(observer);
      };

      Subject.prototype.notify = function() {
        var i, _results;
        i = new Iterator(this.observers);
        _results = [];
        while (!i.isDone()) {
          i.currentItem().changed(this);
          _results.push(i.next());
        }
        return _results;
      };

      return Subject;

    })();
  });

}).call(this);

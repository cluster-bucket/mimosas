// Generated by CoffeeScript 1.6.3
var List, ViewComponent,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ViewComponent = require('./view_component').ViewComponent;

List = require('./list').List;

exports.ViewComposite = (function(_super) {
  __extends(ViewComposite, _super);

  function ViewComposite() {
    ViewComposite.__super__.constructor.apply(this, arguments);
    this.list = new List();
  }

  ViewComposite.prototype.add = function(component) {
    return this.list.append(component);
  };

  ViewComposite.prototype.remove = function(pointer) {
    return this.list.remove(pointer);
  };

  return ViewComposite;

})(ViewComponent);
